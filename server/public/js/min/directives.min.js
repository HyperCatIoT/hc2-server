/*!
 * topcat
 * @author 1248 Ltd. <info@1248.io>
 * @version 1.0.0
 * Copyright .  licensed.
 */

"use strict";angular.module("hypercat.directives",[]),angular.module("hypercat.directives").directive("authentication",["$rootScope",function($rootScope){var link=function(scope){scope.data={},scope.data.username="",scope.data.password="",scope.data.useAuth=!1,scope.updateQuery=function(){$rootScope.$emit("authUpdate",scope.data)}};return{replace:!1,templateUrl:"partials/directives/authentication.html",transclude:!0,link:link}}]),angular.module("hypercat.directives").directive("collapsible",["$rootScope",function($rootScope){var link=function(scope,elem,attrs){scope.visible=!1,scope.title=attrs.title||attrs.cTitle,scope.eventSent=!1,scope.toggle=function(){scope.visible=!scope.visible,"GeoSearch"===scope.title&&$rootScope.$emit("mapOpen",scope.visible),scope.visible&&(scope.eventSent=!0,$rootScope.$emit("collapsibleOpen",!0))},$rootScope.$on("collapsibleOpen",function(){scope.eventSent||(scope.visible=!1),scope.eventSent=!1})};return{replace:!1,templateUrl:"partials/directives/collapsible.html",transclude:!0,link:link,scope:{}}}]),angular.module("hypercat.directives").directive("geoDateSearch",["$rootScope","QueryBuilderService",function($rootScope,QueryBuilderService){var link=function(scope){scope.usingFilter=!1,scope.data={},scope.data.type="multi",scope.data.value={geo:{},date:{}},scope.map=null,scope.lastOverlay=null,scope.showMap=!1,scope.mapToggleText="Pick bounding box on map",scope.pointerEvents=!1,scope.enablePointerEvents=function(){scope.pointerEvents=!0},scope.disablePointerEvents=function(){scope.pointerEvents=!1},scope.toggle=function(){scope.usingFilter?scope.updateQuery():$rootScope.$emit("queryUpdate",{})},scope.toggleMap=function(){scope.showMap=!scope.showMap,scope.showMap?scope.mapToggleText="Hide Map":scope.mapToggleText="Pick bounding box on map"},scope.updateQuery=function(){var isoDate={},rel=scope.data.value.date["lexrange-rel"],minDate=scope.data.value.date["lexrange-min"],maxDate=scope.data.value.date["lexrange-max"];scope.usingFilter&&(void 0!==rel&&(isoDate["lexrange-rel"]=rel),void 0!==minDate&&(isoDate["lexrange-min"]=new Date(minDate).toISOString()),void 0!==maxDate&&(isoDate["lexrange-max"]=new Date(maxDate).toISOString()),$rootScope.$emit("queryUpdate",{type:scope.data.type,value:{intersection:[{query:QueryBuilderService.objectToQuery(scope.data.value.geo)},{query:QueryBuilderService.objectToQuery(isoDate)}]}}))},scope.$on("mapInitialized",function(e,map){var drawingManager;scope.map=map,drawingManager=new google.maps.drawing.DrawingManager({drawingMode:google.maps.drawing.OverlayType.MARKER,drawingControl:!0,drawingControlOptions:{position:google.maps.ControlPosition.TOP_CENTER,drawingModes:[google.maps.drawing.OverlayType.RECTANGLE]}}),google.maps.event.addListener(drawingManager,"rectanglecomplete",function(event){var bounds=event.getBounds(),ne=bounds.getNorthEast(),sw=bounds.getSouthWest();null!==scope.lastOverlay&&scope.lastOverlay.setMap(null),scope.data.value.geo["geobound-minlat"]=sw.lat(),scope.data.value.geo["geobound-maxlat"]=ne.lat(),scope.data.value.geo["geobound-minlong"]=sw.lng(),scope.data.value.geo["geobound-maxlong"]=ne.lng(),scope.lastOverlay=event,scope.lastOverlay.setMap(map),drawingManager.setDrawingMode(null),scope.updateQuery(),scope.$apply()}),drawingManager.setMap(map)}),$rootScope.$on("queryUpdate",function(event,data){void 0!==data&&data.type!==scope.data.type&&(scope.usingFilter=!1)}),$rootScope.$on("mapOpen",function(){setTimeout(function(){null!==scope.map&&google.maps.event.trigger(scope.map,"resize")},100)})};return{templateUrl:"partials/directives/geo-date-search.html",link:link}}]),angular.module("hypercat.directives").directive("geoSearch",["$rootScope",function($rootScope){var link=function(scope){scope.usingFilter=!1,scope.data={},scope.data.type="geoSearch",scope.data.value={},scope.map=null,scope.lastOverlay=null,scope.showMap=!1,scope.mapToggleText="Pick bounding box on map",scope.pointerEvents=!1,scope.toggle=function(){scope.usingFilter?scope.updateQuery():$rootScope.$emit("queryUpdate",{})},scope.toggleMap=function(){scope.showMap=!scope.showMap,scope.showMap?scope.mapToggleText="Hide Map":scope.mapToggleText="Pick bounding box on map"},scope.enablePointerEvents=function(){scope.pointerEvents=!0},scope.disablePointerEvents=function(){scope.pointerEvents=!1},scope.updateQuery=function(){scope.usingFilter&&$rootScope.$emit("queryUpdate",scope.data)},scope.$on("mapInitialized",function(e,map){var drawingManager;scope.map=map,drawingManager=new google.maps.drawing.DrawingManager({drawingMode:google.maps.drawing.OverlayType.MARKER,drawingControl:!0,drawingControlOptions:{position:google.maps.ControlPosition.TOP_CENTER,drawingModes:[google.maps.drawing.OverlayType.RECTANGLE]}}),google.maps.event.addListener(drawingManager,"rectanglecomplete",function(event){var bounds=event.getBounds(),ne=bounds.getNorthEast(),sw=bounds.getSouthWest();null!==scope.lastOverlay&&scope.lastOverlay.setMap(null),scope.data.value["geobound-minlat"]=sw.lat(),scope.data.value["geobound-maxlat"]=ne.lat(),scope.data.value["geobound-minlong"]=sw.lng(),scope.data.value["geobound-maxlong"]=ne.lng(),scope.lastOverlay=event,scope.lastOverlay.setMap(map),drawingManager.setDrawingMode(null),scope.updateQuery(),scope.$apply()}),drawingManager.setMap(map)}),$rootScope.$on("queryUpdate",function(event,data){void 0!==data&&data.type!==scope.data.type&&(scope.usingFilter=!1)}),$rootScope.$on("mapOpen",function(){setTimeout(function(){null!==scope.map&&google.maps.event.trigger(scope.map,"resize")},100)})};return{templateUrl:"partials/directives/geo-search.html",link:link}}]),angular.module("hypercat.directives").directive("hypercatSelect",["$rootScope",function($rootScope){var link=function(scope){scope.catType="default",scope.editorEnabled=!0,"hypercat.1248.io"===window.location.hostname&&(scope.editorEnabled=!1),scope.selectCustom=function(){scope.catType="custom"},scope.updateUrl=function(){$rootScope.$emit("urlUpdate",{type:scope.catType,value:scope.customUrl})}};return{replace:!1,templateUrl:"partials/directives/hypercat-select.html",link:link}}]),angular.module("hypercat.directives").directive("lexicographicSearch",["$rootScope",function($rootScope){var link=function(scope){scope.usingFilter=!1,scope.data={},scope.data.type="lexicographicSearch",scope.data.value={},scope.usingDates=!1,scope.dates={start:null,end:null},scope.updateQuery=function(){var date,formattedData=JSON.parse(JSON.stringify(scope.data));scope.usingFilter&&(scope.usingDates&&scope.data.value["lexrange-min"]&&(date=new Date(scope.data.value["lexrange-min"]),formattedData.value["lexrange-min"]=date.toISOString()),scope.usingDates&&scope.data.value["lexrange-max"]&&(date=new Date(scope.data.value["lexrange-max"]),formattedData.value["lexrange-max"]=date.toISOString()),$rootScope.$emit("queryUpdate",formattedData))},scope.updateDate=function(type){var date;"start"===type?(date=new Date(scope.dates.start),console.log(date.toISOString()),scope.data.value["lexrange-min"]=date.toISOString()):"end"===type&&(date=new Date(scope.dates.end),scope.data.value["lexrange-max"]=date.toISOString())},scope.toggle=function(){scope.usingFilter?scope.updateQuery():$rootScope.$emit("queryUpdate",{})},$rootScope.$on("queryUpdate",function(event,data){void 0!==data&&data.type!==scope.data.type&&(scope.usingFilter=!1)})};return{templateUrl:"partials/directives/lexi-search.html",link:link}}]),angular.module("hypercat.directives").directive("prefixSearch",["$rootScope",function($rootScope){var link=function(scope){scope.usingFilter=!1,scope.data={},scope.data.type="prefixSearch",scope.data.value={},scope.updateQuery=function(){scope.usingFilter&&$rootScope.$emit("queryUpdate",scope.data)},scope.toggle=function(){scope.usingFilter?scope.updateQuery():$rootScope.$emit("queryUpdate",{})},$rootScope.$on("queryUpdate",function(event,data){void 0!==data&&data.type!==scope.data.type&&(scope.usingFilter=!1)})};return{templateUrl:"partials/directives/prefix-search.html",link:link}}]),angular.module("hypercat.directives").directive("simpleSearch",["$rootScope",function($rootScope){var link=function(scope){scope.usingFilter=!1,scope.data={},scope.data.type="simpleSearch",scope.data.value={},scope.updateQuery=function(){scope.usingFilter&&$rootScope.$emit("queryUpdate",scope.data)},scope.toggle=function(){scope.usingFilter?scope.updateQuery():$rootScope.$emit("queryUpdate",{})},$rootScope.$on("queryUpdate",function(event,data){void 0!==data&&data.type!==scope.data.type&&(scope.usingFilter=!1)})};return{templateUrl:"partials/directives/simple-search.html",link:link}}]),angular.module("hypercat.directives").directive("substringSearch",["$rootScope",function($rootScope){var link=function(scope){scope.usingFilter=!1,scope.data={},scope.data.type="substringSearch",scope.data.value={},scope.updateQuery=function(){scope.usingFilter&&$rootScope.$emit("queryUpdate",scope.data)},scope.toggle=function(){scope.usingFilter?scope.updateQuery():$rootScope.$emit("queryUpdate",{})},$rootScope.$on("queryUpdate",function(event,data){void 0!==data&&data.type!==scope.data.type&&(scope.usingFilter=!1)})};return{templateUrl:"partials/directives/substring-search.html",link:link}}]);
//# sourceMappingURL=directives.min.js.map