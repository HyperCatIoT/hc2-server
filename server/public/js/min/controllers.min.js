/*!
 * topcat
 * @author 1248 Ltd. <info@1248.io>
 * @version 1.0.0
 * Copyright .  licensed.
 */

"use strict";var controllers=angular.module("hypercat.controllers",["hypercat.services","angular-json-pretty"]);angular.module("hypercat.controllers").controller("EditorCtrl",["$scope","notifications","QueryBuilderService","CatService",function($scope,notifications,QueryBuilderService,CatService){$scope.url="",$scope.cat=null,$scope.blankItem={"item-metadata":[{val:"test",rel:""}],href:""},$scope.newItem={val:JSON.stringify($scope.blankItem,null,"	")},$scope.editorEnabled=!0,"hypercat.1248.io"===window.location.hostname&&($scope.editorEnabled=!1),$scope.getCatMetadata=function(){return null!==$scope.cat?JSON.stringify($scope.cat["catalogue-metadata"],null,"	"):""},$scope.updateUrl=function(){$scope.url=QueryBuilderService.getCurrentUrl()},$scope.enableTabOnTextareas=function(){var i,textareas=document.getElementsByTagName("textarea"),count=textareas.length,tabFunc=function(e){var s;9!==e.keyCode&&9!==e.which||(e.preventDefault(),s=this.selectionStart,this.value=this.value.prefix(0,this.selectionStart)+"	"+this.value.prefix(this.selectionEnd),this.selectionEnd=s+1)};for(i=0;count>i;i+=1)textareas[i].onkeydown=tabFunc},$scope.renderItems=function(){var i;for(i=0;i<$scope.cat.items.length;i+=1)$scope.cat.items[i].$string=JSON.stringify($scope.cat.items[i],null,"	");setTimeout(function(){$scope.enableTabOnTextareas()},1e3)},$scope.updateCatalogue=function(){CatService.execute({url:$scope.url}).then(function(cat){$scope.cat=cat,$scope.renderItems()})},$scope.updateItem=function(index){var item=$scope.cat.items[index];CatService.execute({url:$scope.url+"?href="+item.href,method:"PUT",data:item.$string}).then(function(){notifications.showSuccess({message:"Item was successfully updated!"})})["catch"](function(err){notifications.showError({message:err})})},$scope.addItem=function(){var itemObject;try{itemObject=JSON.parse($scope.newItem.val)}catch(e){return void notifications.showError({message:"Invalid JSON specified"})}CatService.execute({url:$scope.url,method:"POST",data:itemObject}).then(function(){$scope.cat.items.push(itemObject),$scope.renderItems(),$scope.newItem=JSON.stringify($scope.blankItem,null,"	"),notifications.showSuccess({message:"Item was successfully added!"})})["catch"](function(err){notifications.showError({message:err})})},$scope.deleteItem=function(index,href){CatService.execute({url:$scope.url+"?href="+encodeURIComponent(href),method:"DELETE"}).then(function(){$scope.cat.items.splice(index,1),$scope.renderItems(),notifications.showSuccess({message:"Item was successfully deleted!"})})["catch"](function(err){notifications.showError({message:err})})},$scope.updateUrl(),$scope.updateCatalogue()}]),angular.module("hypercat.controllers").controller("ViewCtrl",["$scope","$rootScope","CatService","QueryBuilderService",function($scope,$rootScope,CatService,QueryBuilderService){$scope.data=null,$scope.catType="default",$scope.customUrl="",$scope.notification=null,$scope.isMenuVisible=!1,$scope.mapView=!1,$scope.markers=[],$scope.infoWindows=[],$scope.map=null,$scope.isGeo=!1,$scope.getQuery=function(){return QueryBuilderService.getCurlQuery()},$scope.selectCustom=function(){$scope.catType="custom"},$scope.toggleMenu=function(){$scope.isMenuVisible?($scope.isMenuVisible=!1,document.body.className=""):($scope.isMenuVisible=!0,document.body.className="menu-open")},$scope.toggleMapView=function(){$scope.mapView=!$scope.mapView},$scope.toggleMapViewText=function(){return $scope.mapView?"JSON View":"Map View"},$scope.runQuery=function(){var isGeo,meta,point,i,j,infoWindow,newMarker,auth=QueryBuilderService.getAuth(),executeQuery={},infoWindowListener=function(){infoWindow.setContent(this.infoContent),infoWindow.open($scope.map,this)};executeQuery=QueryBuilderService.isMulti()?{url:QueryBuilderService.getBasicURL(),auth:auth,method:"POST",data:QueryBuilderService.getCurrentValues()}:{url:QueryBuilderService.getFullQuery(),auth:auth},CatService.execute(executeQuery).then(function(data){for($scope.data=data,i=0;i<$scope.markers.length;i+=1)$scope.markers[i].setMap(null);for($scope.markers=[],infoWindow=new google.maps.InfoWindow({content:JSON.stringify(data.items,null,"	")}),i=0;i<data.items.length;i+=1){for(point={},j=0;j<data.items[i]["item-metadata"].length;j+=1)meta=data.items[i]["item-metadata"][j],"http://www.w3.org/2003/01/geo/wgs84_pos#lat"===meta.rel&&(isGeo=!0,point.lat=meta.val),"http://www.w3.org/2003/01/geo/wgs84_pos#long"===meta.rel&&(isGeo=!0,point["long"]=meta.val);point.lat&&point["long"]&&(newMarker=new google.maps.Marker({position:new google.maps.LatLng(point.lat,point["long"]),map:$scope.map}),newMarker.infoContent="<pre>"+JSON.stringify(data.items[i],null,"	")+"</pre>",newMarker.addListener("click",infoWindowListener),$scope.infoWindows.push(infoWindow),$scope.markers.push(newMarker))}isGeo&&!$scope.mapView&&($scope.isGeo=!0,swal({title:"Geographic Data?",text:"It looks like you have Geographic data, would you like to view as a map instead of JSON?",type:"info",showCancelButton:!0,confirmButtonColor:"#5ab500",confirmButtonText:"Show as Map",cancelButtonText:"Show as JSON",closeOnConfirm:!0},function(isConfirm){isConfirm&&$scope.$apply(function(){$scope.mapView=!0})}))})["catch"](function(){$scope.data={}})},$scope.copyCurlToClipboard=function(){var curl=QueryBuilderService.getCurlQuery(),textArea=document.createElement("textarea");textArea.style.position="fixed",textArea.style.top=0,textArea.style.left=0,textArea.style.width="2em",textArea.style.height="2em",textArea.style.padding=0,textArea.style.border="none",textArea.style.outline="none",textArea.style.boxShadow="none",textArea.style.background="transparent",textArea.value=curl,document.body.appendChild(textArea),textArea.select();try{document.execCommand("copy")}catch(err){console.log("Unable to copy")}document.body.removeChild(textArea)},$scope.$on("mapInitialized",function(event,map){var i;for($scope.map=map,i=0;i<$scope.markers.length;i+=1)$scope.markers[i].setMap(map)}),$rootScope.$on("notificationUpdate",function(e,data){$scope.notification=data}),$rootScope.$on("toggleMenu",function(){$scope.toggleMenu()})}]);
//# sourceMappingURL=controllers.min.js.map